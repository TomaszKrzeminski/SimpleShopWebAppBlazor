@using Microsoft.AspNetCore.Components.Forms
@using SimpleShopWebApp.Models
@using SimpleShopWebApp.Data
@inject NavigationManager Navigation
@*@implements IDisposable*@
@using Microsoft.EntityFrameworkCore.Design
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<ApplicationDbContext>  factory





<h3>AddProduct</h3>

<input class="form-control" @bind="FormSubmitMessage" />

<EditForm Model="@Product" OnInvalidSubmit="HandleInvalidSubmit" >
    <div class="form-group">
        <label></label>
        <InputText @bind-Value="Product.Product.ProductName"></InputText>
    </div>
    <div class="form-group">
        <label></label>
        <InputNumber @bind-Value="Product.Product.PriceHour"></InputNumber>
    </div>
    <div class="form-group">
        <label></label>
        <InputNumber @bind-Value="Product.Product.PricePerPerson"></InputNumber>
    </div>
    <div class="form-group">

        <input class="btn btn-primary"  value="Dodaj"  @onclick="HandleValidSubmit"   />

        @*<button class="btn btn-danger" type="submit">Dodaj</button>*@
    </div>


</EditForm>





@code {


    public string FormSubmitMessage { get; set; } = "Dane formularza nie zostały wysłane";
    public Repository repository { get; set; }

    public void HandleInvalidSubmit() => FormSubmitMessage = "Dane w formularzu są błędne";

    public bool DataLogin = false;





    public AddProductViewModel Product { get; set; } = new AddProductViewModel();

    public async Task HandleValidSubmit()
    {


        if(DataLogin)
        {
            return;
        }


        try
        {
            DataLogin = true;
            FormSubmitMessage = "Dodano  " + Product.Product.ProductName + " z dnia " + Product.Product.DateTimeStart;


            using(var repo=new Repository( factory.CreateDbContext()))
            {

                await repo.AddProduct(Product.Product);

            }




        }
        catch(Exception ex)
        {

        }
        finally
        {
            Product = new AddProductViewModel();
            DataLogin = false;

        }









    }








    public  async Task Update()
    {

        //FormSubmitMessage = "Odświeżam";

    }




    //public void Dispose()
    //{
    //    FormSubmitMessage = "Usuwam";
    //    repository.Dispose();
    //}



    //public void Dispose()
    //{


    //    if(DataLogin)
    //    {
    //        return;
    //    }

    //    try
    //    {
    //        DataLogin = true;
    //        repository.Dispose();
    //    }
    //    catch(Exception ex)
    //    {

    //    }

    //    finally
    //    {
    //        DataLogin = false;
    //    }

    //}

}

